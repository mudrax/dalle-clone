/* eslint-disable react/prop-types */
import { useState, useEffect } from "react";
import { Card, FormField, Loader } from "../components";

// HAS 2 FUNCTIONALITIES :
// 1 . If data is present show the available data -> searched+old / onlyOld
// 2 . If data is not present show the message called title here
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  // use state for loading animation.
  const [loading, setLoading] = useState(false);
  // use state for all the posts that has been searched.
  const [posts, setPosts] = useState(null);
  // use state for text used for searching the image.
  const [searchText, setSearchText] = useState("");

  const [searchResults, setSearchResults] = useState(null);

  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const result = await response.json();
          setPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    e.preventDefault();

    clearTimeout(searchTimeout);

    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = posts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );

        setSearchResults(searchResult);
      }, 500)
    );
  };

  return (
    // A section is HTML container that contains various other HTML elements
    <section className="max-w-7xl mx-auto">
      {/* title of the section : Contains : MAIN HEADING , SMALL DESCRIPTION */}
      <div>
        {/* The main heading */}
        <h1
          className="font-extrabold text-[#222328] 
          text-[32px]"
        >
          The Community Showcase
        </h1>
        {/* Small desciption of homePage */}
        <p className="mt-2 text-[#666e75] text-[15px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E 2.0
        </p>
      </div>

      {/* ? : This div will contain all the images ????????????? */}
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      {/* HAVE 2 FUNCTIONALITIES COMBINED : 
      1. While all the data is not yet fetched loader moves(TRUE)
      2. After Loader is loader and data is fetched show : 
                SEARCHSTRING  
                ALL_DATA    
      3. If no search string is provided then show old data : 
                OLD_DATA   */}
      <div className="mt-10">
        {/* loader functionality */}
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {/* Search String is present ? Searched ? */}
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-x1 mb-3">
                Showing results for{" "}
                <span className="text-[#222328] hover:font-bold">
                  {searchText}
                </span>
              </h2>
            )}
            {/* Show Searched/OldData */}
            <div
              className="grid lg:grid-cols-4 sm:grid-cols-3 
            xs:grid-cols-2 grid-cols-1 gap-3"
            >
              {searchText ? (
                <RenderCards
                  data={searchResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={posts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
